name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3.1
        with:
          version: v3.5.3

      - uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.2.1
        with:
          version: v3.3.1

      - name: Run chart-testing (list-changed on main)
        id: list-changed-main
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          changed=$(ct list-changed --config ct.yaml --since ${{ github.event.before }})
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (list-changed for PR)
        id: list-changed-pr
        if: github.event_name == 'pull_request'
        run: |
          changed=$(ct list-changed --config ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint on main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: ct lint --config ct.yaml --since ${{ github.event.before }} --check-version-increment=false

      - name: Run chart-testing (lint for PR)
        if: github.event_name == 'pull_request'
        run: ct lint --config ct.yaml

      - name: Create kind cluster (main)
        uses: helm/kind-action@v1.3.0
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.list-changed-main.outputs.changed == 'true'
        with:
          version: v0.11.1
          node_image: "kindest/node:v1.23.0"
          kubectl_version: v1.23.1

      - name: Create kind cluster (PR)
        uses: helm/kind-action@v1.3.0
        if: github.event_name == 'pull_request' && steps.list-changed-pr.outputs.changed == 'true'
        with:
          version: v0.11.1
          node_image: "kindest/node:v1.23.0"
          kubectl_version: v1.23.1

      - name: Run chart-testing (install on main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: ct install --config ct.yaml --since ${{ github.event.before }}

      - name: Run chart-testing (install for PR)
        if: github.event_name == 'pull_request'
        run: ct install --config ct.yaml

  kube-linter:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chart:
          - adguard-home
          - dev-feed
          - ghost-export-to-s3
          - mac-oui
          - service-names-port-numbers
    steps:
      - uses: actions/checkout@v3

      - name: Scan '${{ matrix.chart }}' Chart with kube-linter
        uses: stackrox/kube-linter-action@v1.0.4
        continue-on-error: true
        with:
          directory: charts/${{ matrix.chart }}
          config: .kube-linter/config.yaml
          format: sarif
          output-file: ${{ matrix.chart }}.sarif
          version: 0.2.5

      - name: Upload SARIF file
        if: ${{ always() }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ matrix.chart }}.sarif

  release:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    needs:
      - lint-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3.1
        with:
          version: v3.5.3

      - name: Add Helm repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.4.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  update_gh-pages:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Sync README.md to gh-pages branch
        run: |
          git fetch
          git checkout -b gh-pages origin/gh-pages
          git pull --rebase
          git checkout origin/main README.md
          if [[ `git status --porcelain` ]]; then
            git commit -am "Sync README.md from origin/main"
            git push origin gh-pages
          fi
