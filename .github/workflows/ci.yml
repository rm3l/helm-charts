name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  pre-commit_checks:
    runs-on: ubuntu-latest
    concurrency:
      group: pre-commit-${{ github.ref }}
      cancel-in-progress: true
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: 3.x

    - uses: asdf-vm/actions/setup@v3
    - name: Install asdf dependencies
      run: |
        asdf plugin-add helm-docs https://github.com/sudermanjr/asdf-helm-docs.git
        asdf install

    - uses: pre-commit/action@v3.0.1
    - uses: pre-commit-ci/lite-action@v1.0.3
      if: always()
      with:
        msg: Apply automatic fixes

  lint:
    runs-on: ubuntu-latest
    concurrency:
      group: lint-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run chart-testing (list-changed on main)
        id: list-changed-main
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          changed=$(ct list-changed --config ct.yaml --since ${{ github.event.before }})
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (list-changed for PR)
        id: list-changed-pr
        if: github.event_name == 'pull_request'
        run: |
          changed=$(ct list-changed --config ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint on main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: ct lint --config ct.yaml --since ${{ github.event.before }} --check-version-increment=false

      - name: Run chart-testing (lint for PR)
        if: github.event_name == 'pull_request'
        run: ct lint --config ct.yaml

  test:
    strategy:
      matrix:
        # https://endoflife.date/kubernetes and https://hub.docker.com/r/kindest/node/tags?page=1
        kube_version: [1.27.13, 1.28.9, 1.29.4, 1.30.0]
        experimental: [false]
        # include:
        #   - kube_version: '1.30.0-alpha.0.102_41890534532931'
        #     experimental: true
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    name: Test (K8s ${{ matrix.kube_version }})
    concurrency:
      group: test-${{ matrix.kube_version }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run chart-testing (list-changed on main)
        id: list-changed-main
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          changed=$(ct list-changed --config ct.yaml --since ${{ github.event.before }})
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (list-changed for PR)
        id: list-changed-pr
        if: github.event_name == 'pull_request'
        run: |
          changed=$(ct list-changed --config ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Create Kind Config
        run: |
          cat <<EOF > /tmp/kind.config_${{ matrix.kube_version }}.yaml
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          nodes:
          - role: control-plane
            image: "kindest/node:v${{ matrix.kube_version }}"
            kubeadmConfigPatches:
            - |
              kind: InitConfiguration
              nodeRegistration:
                kubeletExtraArgs:
                  node-labels: "ingress-ready=true"
            extraPortMappings:
            - containerPort: 80
              hostPort: 80
              protocol: TCP
            - containerPort: 443
              hostPort: 443
              protocol: TCP
          EOF

      - name: Create kind cluster (main)
        uses: helm/kind-action@v1.10.0
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.list-changed-main.outputs.changed == 'true'
        with:
          config: /tmp/kind.config_${{ matrix.kube_version }}.yaml

      - name: Deploy NGINX Ingress Controller (main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.list-changed-main.outputs.changed == 'true'
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
          kubectl wait --namespace ingress-nginx \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/component=controller \
            --timeout=90s

      - name: Create kind cluster (PR)
        uses: helm/kind-action@v1.10.0
        if: github.event_name == 'pull_request' && steps.list-changed-pr.outputs.changed == 'true'
        with:
          config: /tmp/kind.config_${{ matrix.kube_version }}.yaml

      - name: Deploy NGINX Ingress Controller (PR)
        if: github.event_name == 'pull_request' && steps.list-changed-pr.outputs.changed == 'true'
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
          kubectl wait --namespace ingress-nginx \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/component=controller \
            --timeout=90s

      - name: Run chart-testing (install on main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: ct install --config ct.yaml --since ${{ github.event.before }}

      - name: Run chart-testing (install for PR)
        if: github.event_name == 'pull_request'
        run: ct install --config ct.yaml
      
  kube-linter:
    runs-on: ubuntu-latest
    concurrency:
      group: kube-linter-${{ matrix.chart }}-${{ github.ref }}
      cancel-in-progress: true
    strategy:
      matrix:
        chart:
          - adguard-home
          - atuin
          - dev-feed
          - ghost-export-to-s3
          - mac-oui
          - service-names-port-numbers
    steps:
      - uses: actions/checkout@v4

      - name: Scan '${{ matrix.chart }}' Chart with kube-linter
        uses: stackrox/kube-linter-action@v1.0.5
        continue-on-error: true
        with:
          directory: charts/${{ matrix.chart }}
          config: .kube-linter/config.yaml
          format: sarif
          output-file: ${{ matrix.chart }}.sarif
          #version: 0.5.0

      - name: Upload SARIF file
        if: ${{ always() }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ matrix.chart }}.sarif

  release:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    concurrency:
      group: release
      cancel-in-progress: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        #with:
        #  version: v3.10.0

      - name: Add Helm repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  update_gh-pages:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    needs:
      - release
    concurrency:
      group: update_gh-pages
      cancel-in-progress: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Sync README.md to gh-pages branch
        run: |
          git fetch
          git checkout -b gh-pages origin/gh-pages
          git pull --rebase
          git checkout origin/main README.md
          if [[ `git status --porcelain` ]]; then
            git commit -am "Sync README.md from origin/main"
            git push origin gh-pages
          fi
